{
  "Reading Data": [
    {
      "key": "Space",
      "variants": [
        "By Id",
        "By Owner",
        "By Handle"
      ],
      "snippets": [
        "const spaceId = 1\nconst space = await flatApi.findSpace({id: spaceId})\nreturn space;",
        "const ownerAccountId = '<owner_account_public_key>'\n\n// Fetching ids of all the spaces by owner.\nconst spaceIds = await flatApi.subsocial.substrate.spaceIdsByOwner(ownerAccountId)\n\n// Fetching space data from all ids.\nconst spaces = await flatApi.subsocial.findSpaces({ids: spaceIds})\nreturn space;",
        "const handleName = 'subsocial'\n\n// Fetching spaceId by Handle.\nconst spaceId = await flatApi.subsocial.substrate.getSpaceIdByHandle(handleName)\n\n// Fetching space by spaceId.\nconst space = await flatApi.findSpace({id: spaceId})\nreturn space;"
      ]
    },
    {
      "key": "Post",
      "variants": [
        "By Id",
        "By Owner",
        "By Handle"
      ],
      "snippets": [
        "const postId = 1\nconst post = await flatApi.findPost({id: postId})\nreturn post;",
        "const ownerAccountId = '<owner_account_public_key>'\n\n// Fetching ids of all the spaces by owner.\nconst spaceIds = await flatApi.subsocial.substrate.spaceIdsByOwner(ownerAccountId)\n\n// Fetching space data from all ids.\nconst spaces = await flatApi.subsocial.findSpaces({ids: spaceIds})\nreturn space;",
        "const handleName = 'subsocial'\n\n// Fetching postId by Handle.\nconst spaceId = await flatApi.subsocial.substrate.getSpaceIdByHandle(handleName)\n\n// Fetching space by spaceId.\nconst space = await flatApi.findSpace({id: spaceId})\nreturn space;"
      ]
    }
  ],
  "Writing Data": [
    {
      "key": "Space",
      "variants": [
        "By Id",
        "By Owner",
        "By Handle"
      ],
      "snippets": [
        "const spaceId = 1\nconst space = await flatApi.findSpace({id: spaceId})\nresponse = space;",
        "const ownerAccountId = '<owner_account_public_key>'\n\n// Fetching ids of all the spaces by owner.\nconst spaceIds = await flatApi.subsocial.substrate.spaceIdsByOwner(ownerAccountId)\n\n// Fetching space data from all ids.\nconst spaces = await flatApi.subsocial.findSpaces({ids: spaceIds})\nreturn space;",
        "const handleName = 'subsocial'\n\n// Fetching spaceId by Handle.\nconst spaceId = await flatApi.subsocial.substrate.getSpaceIdByHandle(handleName)\n\n// Fetching space by spaceId.\nconst space = await flatApi.findSpace({id: spaceId})\nreturn space;"
      ]
    }
  ]
}